<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.srct.service.account.dao.mapper.RoleDao">
  <resultMap id="BaseResultMap" type="com.srct.service.account.dao.entity.Role">
    <!--@mbg.generated generated on Wed Jul 31 23:03:21 CST 2019.-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="parent_role_id" jdbcType="INTEGER" property="parentRoleId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="valid" jdbcType="TINYINT" property="valid" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated generated on Wed Jul 31 23:03:21 CST 2019.-->
    id, parent_role_id, `name`, create_time, last_update_time, `valid`
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated generated on Wed Jul 31 23:03:21 CST 2019.-->
    update ac_role
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="parent_role_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.parentRoleId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.name,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="last_update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.lastUpdateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="`valid` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.valid,jdbcType=TINYINT}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated generated on Wed Jul 31 23:03:21 CST 2019.-->
    insert into ac_role
    (parent_role_id, `name`, create_time, last_update_time, `valid`)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.parentRoleId,jdbcType=INTEGER}, #{item.name,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.lastUpdateTime,jdbcType=TIMESTAMP}, #{item.valid,jdbcType=TINYINT})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.srct.service.account.dao.entity.Role" useGeneratedKeys="true">
    <!--@mbg.generated generated on Wed Jul 31 23:03:21 CST 2019.-->
    insert into ac_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      parent_role_id,
      `name`,
      create_time,
      last_update_time,
      `valid`,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      #{parentRoleId,jdbcType=INTEGER},
      #{name,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP},
      #{lastUpdateTime,jdbcType=TIMESTAMP},
      #{valid,jdbcType=TINYINT},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      parent_role_id = #{parentRoleId,jdbcType=INTEGER},
      `name` = #{name,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      `valid` = #{valid,jdbcType=TINYINT},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.srct.service.account.dao.entity.Role" useGeneratedKeys="true">
    <!--@mbg.generated generated on Wed Jul 31 23:03:21 CST 2019.-->
    insert into ac_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="parentRoleId != null">
        parent_role_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
      <if test="valid != null">
        `valid`,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="parentRoleId != null">
        #{parentRoleId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=TINYINT},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="parentRoleId != null">
        parent_role_id = #{parentRoleId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null">
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        `valid` = #{valid,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
</mapper>